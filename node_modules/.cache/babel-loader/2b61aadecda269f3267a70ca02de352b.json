{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend16\\\\src\\\\views\\\\examples\\\\Custom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // reactstrap components\n\nimport { Container, Button, Input } from \"reactstrap\";\nimport { useParams } from \"react-router-dom\";\nimport AuthenticationService from \"../../jwtlogin/AuthenticationService.js\"; // core components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Custom() {\n  _s();\n\n  const setupAxiosInterceptors = AuthenticationService.setupAxiosInterceptors();\n  const {\n    mode\n  } = useParams();\n  const [Schedules, setSchedule] = useState({\n    id: \"\",\n    title: \"\",\n    startdate: \"\",\n    enddate: \"\",\n    alldat: false,\n    userid: \"test\"\n  });\n  let pageHeader = /*#__PURE__*/React.createRef();\n\n  const f3 = async () => {\n    if (!Schedules.title) {\n      window.confirm(\"제목을 작성해주세요\");\n    } else if (Schedules.startdate >= Schedules.enddate) {\n      window.confirm(\"시작날짜를 종료날짜 이후로 설정해주세요\");\n    } else {\n      if (mode == \"new\") {\n        if (window.confirm(\"저장하시겠습니까?\")) {\n          axios.post('/api/saveschedule', Schedules).then(function (response) {\n            //console.log(response);\n            window.open(\"about:blank\", \"_self\");\n            window.location.href = '../calendars';\n          }).catch(function (error) {//console.log(error);\n          });\n        }\n      } else {\n        if (!Schedules.title) {\n          window.confirm(\"제목을 작성해주세요\");\n        } else {\n          if (window.confirm(\"수정하시겠습니까?\")) {\n            axios.put('/api/updateschedule/' + Schedules.id, Schedules).then(function (response) {\n              //console.log(response);\n              window.open(\"about:blank\", \"_self\");\n              window.location.href = '../calendars';\n            }).catch(function (error) {//console.log(error);\n            });\n          }\n        }\n      }\n    }\n  };\n\n  const f4 = async () => {\n    //console.log(Schedules);\n    if (mode != \"new\") {\n      if (window.confirm(\"삭제하시겠습니까?\")) {\n        axios.delete('/api/deleteschedule/' + mode).then(function (response) {\n          //console.log(response);\n          window.open(\"about:blank\", \"_self\");\n          window.location.href = '../calendars';\n        }).catch(function (error) {//console.log(error);\n        });\n      }\n    }\n  };\n\n  function Buttons() {\n    if (mode == \"new\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          className: \"btn-round\",\n          color: \"white\",\n          onClick: f3,\n          size: \"lg\",\n          children: \"\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this);\n    } else if (mode != \"new\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          className: \"btn-round\",\n          color: \"white\",\n          onClick: f3,\n          size: \"lg\",\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          block: true,\n          className: \"btn-round\",\n          color: \"white\" // href=\"\"\n          ,\n          onClick: f4,\n          size: \"lg\",\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n  React.useEffect(() => {\n    let isSubscribed = true;\n\n    if (mode != \"new\") {\n      axios.get('/api/getschedulebyNum/' + mode).then(Response => setSchedule(Response.data));\n    }\n\n    if (window.innerWidth > 991) {\n      const updateScroll = () => {\n        let windowScrollTop = window.pageYOffset / 3;\n        pageHeader.current.style.transform = \"translate3d(0,\" + windowScrollTop + \"px,0)\";\n      };\n\n      window.addEventListener(\"scroll\", updateScroll);\n      return function cleanup() {\n        window.removeEventListener(\"scroll\", updateScroll);\n        isSubscribed = false;\n      };\n    }\n\n    return function cleanup() {\n      isSubscribed = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header-image\",\n        style: {\n          backgroundImage: \"url(\" + require(\"assets/img/bg5.jpg\").default + \")\"\n        },\n        ref: pageHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-center\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"\\uB2F9\\uC2E0\\uC758 \\uC77C\\uC815\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\uC81C\\uBAA9\", /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"\\uC81C\\uBAA9...\",\n              maxlength: \"14\",\n              type: \"text\",\n              value: Schedules.title,\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setSchedule({\n                id: Schedules.id,\n                title: value,\n                startdate: Schedules.startdate,\n                enddate: Schedules.enddate,\n                alldat: Schedules.alldat,\n                userid: Schedules.userid\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\uC2DC\\uC791\\uB0A0\\uC9DC\", /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"\\uC2DC\\uC791\\uB0A0\\uC9DC...\",\n              type: \"datetime-local\",\n              name: \"startdate\",\n              value: Schedules.startdate,\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setSchedule({\n                id: Schedules.id,\n                title: Schedules.title,\n                startdate: value,\n                enddate: Schedules.enddate,\n                alldat: Schedules.alldat,\n                userid: Schedules.userid\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\uC885\\uB8CC\\uB0A0\\uC9DC\", /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"\\uC885\\uB8CC\\uB0A0\\uC9DC...\",\n              value: Schedules.enddate,\n              type: \"datetime-local\",\n              name: \"enddate\",\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setSchedule({\n                id: Schedules.id,\n                title: Schedules.title,\n                startdate: Schedules.startdate,\n                enddate: value,\n                alldat: Schedules.alldat,\n                userid: Schedules.userid\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), Buttons()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Custom, \"hRr9mY5X8+9gI4wM7G51IF81wK8=\", false, function () {\n  return [useParams];\n});\n\n_c = Custom;\nexport default Custom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Custom\");","map":{"version":3,"sources":["C:/frontend16/src/views/examples/Custom.js"],"names":["React","useState","axios","Container","Button","Input","useParams","AuthenticationService","Custom","setupAxiosInterceptors","mode","Schedules","setSchedule","id","title","startdate","enddate","alldat","userid","pageHeader","createRef","f3","window","confirm","post","then","response","open","location","href","catch","error","put","f4","delete","Buttons","useEffect","isSubscribed","get","Response","data","innerWidth","updateScroll","windowScrollTop","pageYOffset","current","style","transform","addEventListener","cleanup","removeEventListener","backgroundImage","require","default","target","value"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\";\r\nimport axios from \"axios\";\r\n// reactstrap components\r\nimport {Container, Button, Input } from \"reactstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AuthenticationService from \"../../jwtlogin/AuthenticationService.js\";\r\n// core components\r\n\r\nfunction Custom() {\r\n  const setupAxiosInterceptors=AuthenticationService.setupAxiosInterceptors();\r\n  const {mode}=useParams();  \r\n   const [Schedules, setSchedule] = useState({\r\n     id:\"\",\r\n     title:\"\",\r\n     startdate:\"\",\r\n     enddate:\"\",\r\n     alldat:false,\r\n     userid:\"test\"\r\n    }\r\n   );\r\n  \r\n  let pageHeader = React.createRef();\r\n\r\n\r\n\r\n \r\n  const f3 = async () => {\r\n    if(!Schedules.title){\r\n      window.confirm(\"제목을 작성해주세요\");\r\n    }else if(Schedules.startdate >= Schedules.enddate){\r\n      window.confirm(\"시작날짜를 종료날짜 이후로 설정해주세요\");\r\n    }\r\n    else{\r\n    if(mode == \"new\"){\r\n      if(window.confirm(\"저장하시겠습니까?\")){\r\n    axios.post('/api/saveschedule', Schedules)\r\n  .then(function (response) {\r\n    //console.log(response);\r\n    window.open(\"about:blank\", \"_self\");\r\n    window.location.href ='../calendars'\r\n  })\r\n  .catch(function (error) {\r\n    //console.log(error);\r\n  });}\r\n}else{\r\n  if(!Schedules.title){\r\n  window.confirm(\"제목을 작성해주세요\");\r\n}else{\r\n  if(window.confirm(\"수정하시겠습니까?\")){\r\n  axios.put('/api/updateschedule/'+ Schedules.id, Schedules)\r\n  .then(function (response) {\r\n    //console.log(response);\r\n    window.open(\"about:blank\", \"_self\");\r\n    window.location.href ='../calendars'\r\n  })\r\n  .catch(function (error) {\r\n    //console.log(error);\r\n  });}\r\n}}}}\r\n\r\n  const f4 = async () => {\r\n    //console.log(Schedules);\r\n    if(mode != \"new\"){\r\n      if(window.confirm(\"삭제하시겠습니까?\")){\r\n    axios.delete('/api/deleteschedule/'+mode)\r\n  .then(function (response) {\r\n    //console.log(response);\r\n    window.open(\"about:blank\", \"_self\");\r\n    window.location.href ='../calendars'}\r\n  )\r\n  .catch(function (error) {\r\n    //console.log(error);\r\n  });}\r\n}\r\n  }\r\n\r\nfunction Buttons(){\r\n  if(mode == \"new\"){\r\n    return (\r\n      <div><Button\r\n      block\r\n      className=\"btn-round\"\r\n      color=\"white\"\r\n      onClick={f3}\r\n      size=\"lg\"\r\n      >\r\n          등록\r\n          </Button></div>\r\n      \r\n    )\r\n  }else if(mode !=\"new\"){\r\n    return(\r\n      <div>\r\n  <Button\r\n      block\r\n      className=\"btn-round\"\r\n      color=\"white\"\r\n      onClick={f3}\r\n      size=\"lg\"\r\n      >\r\n          수정\r\n          </Button>\r\n            <Button\r\n            block\r\n            className=\"btn-round\"\r\n            color=\"white\"\r\n            // href=\"\"\r\n            onClick={f4}\r\n            size=\"lg\"\r\n            >\r\n                삭제\r\n            </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n  React.useEffect(() => {\r\n    let isSubscribed = true;\r\n     if(mode !=\"new\"){\r\n\r\naxios\r\n.get('/api/getschedulebyNum/'+mode)\r\n.then(( Response ) => setSchedule(Response.data));\r\n     }\r\n    if (window.innerWidth > 991) {\r\n      const updateScroll = () => {\r\n        let windowScrollTop = window.pageYOffset / 3;\r\n        pageHeader.current.style.transform =\r\n          \"translate3d(0,\" + windowScrollTop + \"px,0)\";\r\n      };\r\n      window.addEventListener(\"scroll\", updateScroll);\r\n      return function cleanup() {\r\n        window.removeEventListener(\"scroll\", updateScroll);\r\n        isSubscribed = false;\r\n      };\r\n    }\r\n\r\n    return function cleanup() {\r\n      isSubscribed = false;\r\n    };\r\n  },[]);\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">\r\n        <div\r\n          className=\"page-header-image\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url(\" + require(\"assets/img/bg5.jpg\").default + \")\",\r\n          }}\r\n          ref={pageHeader}\r\n        ></div>\r\n        <div className=\"content-center\">\r\n          <Container>\r\n            <h1 className=\"title\">당신의 일정을 입력해주세요</h1><br/>\r\n            <h2>제목<Input\r\n            placeholder=\"제목...\"\r\n            maxlength=\"14\"\r\n            type=\"text\"\r\n            value={Schedules.title}\r\n            onChange={({ target: { value } }) =>\r\n             setSchedule({\r\n              id:Schedules.id,\r\n     title:value,\r\n     startdate:Schedules.startdate,\r\n     enddate:Schedules.enddate,\r\n     alldat:Schedules.alldat,\r\n     userid:Schedules.userid\r\n        })\r\n        }\r\n\r\n\r\n            ></Input></h2>\r\n            <h2>시작날짜<Input\r\n            placeholder=\"시작날짜...\"\r\n            type=\"datetime-local\"\r\n            name=\"startdate\"\r\n            value={Schedules.startdate}\r\n            onChange={({ target: { value } }) => setSchedule({\r\n              id:Schedules.id,\r\n              title:Schedules.title,\r\n              startdate:value,\r\n              enddate:Schedules.enddate,\r\n              alldat:Schedules.alldat,\r\n              userid:Schedules.userid})}\r\n            ></Input></h2>\r\n            <h2>종료날짜<Input\r\n            placeholder=\"종료날짜...\"\r\n            value={Schedules.enddate}\r\n            type=\"datetime-local\"\r\n            name=\"enddate\"\r\n            onChange={({ target: { value } }) => setSchedule({\r\n              id:Schedules.id,\r\n              title:Schedules.title,\r\n              startdate:Schedules.startdate,\r\n              enddate:value,\r\n              alldat:Schedules.alldat,\r\n              userid:Schedules.userid})}\r\n            ></Input></h2>\r\n            <br/>\r\n            {/* <Button\r\n            block\r\n            className=\"btn-round\"\r\n            color=\"white\"\r\n            // href=\"\"\r\n            onClick={f3}\r\n            size=\"lg\"\r\n            >\r\n                등록\r\n                </Button> */}\r\n          {Buttons()}\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Custom;"]},"metadata":{},"sourceType":"module"}