{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend16\\\\src\\\\views\\\\examples\\\\Calendars.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Calendar, momentLocalizer } from 'react-big-calendar'; //여기에서 이미 calendar를 ㅓimport 할 수 있게 해놓음 \n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from \"moment\"; // 밑에 언어랑 시간대 가져옴\n//import Anyday from '../../Anyday';\n\nimport axios from 'axios';\nimport CalendarButton from './CalendarButton';\nimport AuthenticationService from \"../../jwtlogin/AuthenticationService.js\"; // reactstrap components\n// import {\n// } from \"reactstrap\";\n// core components\n\nimport ExamplesNavbar from \"components/Navbars/ExamplesNavbar.js\";\nimport DarkFooter from \"components/Footers/DarkFooter.js\"; // sections for this page\n// import BasicElements from \"./index-sections/BasicElements.js\";\n// import Pagination from \"./index-sections/Pagination.js\";\n// import Carousel from \"./index-sections/Carousel.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calendars() {\n  _s();\n\n  const [names, setNames] = useState([]);\n  const [eventss, setEventss] = useState([]);\n  const [id, setID] = useState(\"test\");\n  const [viewss, setViews] = useState();\n  const [datedss, setDates] = useState();\n  const localizer = momentLocalizer(moment); // 위에 import\n\n  /*const [addresss,setLocationObj] =useState({\r\n    locationfinal:\"\"\r\n  });\r\n  const [max,setMax] =useState(0);\r\n  const [loading,setLoading]=useState();\r\n    */\n\n  const setupAxiosInterceptors = AuthenticationService.setupAxiosInterceptors();\n  const navigateContants = {\n    PREVIOUS: 'PREV',\n    NEXT: 'NEXT',\n    DATE: 'DATE'\n  };\n  React.useEffect(() => {\n    let isSubscribed = true;\n    axios.get('/api/getHoliDeInfo?yearss=' + moment().year()).then(Response => {\n      if (Response.status === 200) {\n        setNames(Response.data.response.body.items.item);\n        axios.get('/api/getschedule/' + id).then(Response => {\n          if (Response.status === 200) {\n            setEventss(Response.data);\n          }\n        }); // console.log(Response.data.response.body.items.item);\n      }\n    });\n    document.body.classList.add(\"calendars\");\n    document.body.classList.add(\"sidebar-collapse\");\n    document.documentElement.classList.remove(\"nav-open\");\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n    return function cleanup() {\n      document.body.classList.remove(\"calendars\");\n      document.body.classList.remove(\"sidebar-collapse\");\n      isSubscribed = false;\n    };\n  }, []);\n  const events = names.map(data => {\n    const datess = String(data.locdate).substring(0, 4) + \",\" + String(data.locdate).substring(4, 6) + \",\" + String(data.locdate).substring(6, 8);\n    return {\n      // id: training.id,\n      title: data.dateName,\n      start: new Date(datess),\n      end: new Date(datess),\n      alldat: true\n    };\n  });\n  const events2 = eventss.map(data => {\n    return {\n      id: data.id,\n      title: data.title,\n      start: moment(data.startdate).toDate(),\n      end: moment(data.enddate).toDate(),\n      alldat: data.alldat\n    };\n  });\n\n  const handleSlotSelect = slotInfo => {\n    //if (viewss === 'month') { // assumes you got 'view' from state\n    //   // ... do some date stuff to get _just the date_ from the slotInfo.start\n    setDates(slotInfo.start);\n    setViews('day'); //alert(datedss);\n    // }\n    // ... any other slot selection functionality for other views\n  }; //const myEventsList=Anyday; // json으로 작성한거 임시로 넣어서 밑에 있는 이벤트로 들어감\n\n\n  const Calendarfinal = () => {\n    //위에 import로 이미 캘린더는 생성이 되었고 const가 변수선언이랑 비슷한건데 이걸 .. 컴포넌트? 로 해서 밑에 넣음\n    //console.log(events)\n    const finalevent = Object.assign(events, events2); // setYears()\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onSelectEvent: event => {\n          if (event.id != null) window.location.href = \"./custom/\" + event.id;\n        } //공휴일이랑 정한 일정 분리(?)\n        ,\n        localizer: localizer //언어와 시간대\n        ,\n        events: finalevent //출퇴근 위에꺼 입력됨\n        ,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        selectable: true,\n        onNavigate: datedss,\n        date: datedss,\n        defaultView: viewss,\n        defaultDate: datedss,\n        onNavigate: date => setDates(date),\n        getDrilldownView: (targetDate, currentViewName, configuredViewNames) => {\n          setViews(currentViewName);\n          return null;\n        },\n        onSelectSlot: handleSlotSelect,\n        style: {\n          height: 690,\n          margin: 30,\n          marginBottom: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ExamplesNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header clear-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header-image\",\n          style: {\n            backgroundImage: \"url(\" + require(\"assets/img/hi.jpg\").default + \")\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-center\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"title\",\n              children: \"Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Calendarfinal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(CalendarButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DarkFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Calendars, \"jKyXCe56JT+xPRHYTen2z+kRdm0=\");\n\n_c = Calendars;\nexport default Calendars; //({ forceRefresh: true });\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendars\");","map":{"version":3,"sources":["C:/frontend16/src/views/examples/Calendars.js"],"names":["React","useState","Container","Calendar","momentLocalizer","moment","axios","CalendarButton","AuthenticationService","ExamplesNavbar","DarkFooter","Calendars","names","setNames","eventss","setEventss","id","setID","viewss","setViews","datedss","setDates","localizer","setupAxiosInterceptors","navigateContants","PREVIOUS","NEXT","DATE","useEffect","isSubscribed","get","year","then","Response","status","data","response","body","items","item","document","classList","add","documentElement","remove","window","scrollTo","scrollTop","cleanup","events","map","datess","String","locdate","substring","title","dateName","start","Date","end","alldat","events2","startdate","toDate","enddate","handleSlotSelect","slotInfo","Calendarfinal","finalevent","Object","assign","event","location","href","date","targetDate","currentViewName","configuredViewNames","height","margin","marginBottom","backgroundImage","require","default"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container} from \"reactstrap\";\r\nimport  { Calendar, momentLocalizer  } from 'react-big-calendar'; //여기에서 이미 calendar를 ㅓimport 할 수 있게 해놓음 \r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from \"moment\"; // 밑에 언어랑 시간대 가져옴\r\n//import Anyday from '../../Anyday';\r\nimport axios from 'axios';\r\nimport CalendarButton from './CalendarButton';\r\nimport AuthenticationService from \"../../jwtlogin/AuthenticationService.js\";\r\n// reactstrap components\r\n// import {\r\n// } from \"reactstrap\";\r\n\r\n// core components\r\nimport ExamplesNavbar from \"components/Navbars/ExamplesNavbar.js\";\r\nimport DarkFooter from \"components/Footers/DarkFooter.js\";\r\n// sections for this page\r\n// import BasicElements from \"./index-sections/BasicElements.js\";\r\n// import Pagination from \"./index-sections/Pagination.js\";\r\n// import Carousel from \"./index-sections/Carousel.js\";\r\n\r\nfunction Calendars() {\r\n \r\n  const [names,setNames]=useState([]);const [eventss,setEventss]=useState([]);\r\n  const [id,setID]=useState(\"test\");\r\n  const [viewss,setViews]=useState();\r\n  const [datedss,setDates]=useState();\r\n  const localizer = momentLocalizer(moment); // 위에 import\r\n  /*const [addresss,setLocationObj] =useState({\r\n    locationfinal:\"\"\r\n  });\r\n  const [max,setMax] =useState(0);\r\n  const [loading,setLoading]=useState();\r\n\r\n  */\r\n  const setupAxiosInterceptors=AuthenticationService.setupAxiosInterceptors();\r\n  const navigateContants = {\r\n    PREVIOUS: 'PREV',\r\n    NEXT: 'NEXT',\r\n    DATE: 'DATE'\r\n};\r\n  \r\n  React.useEffect(() => {\r\n    let isSubscribed = true;\r\n    axios.get('/api/getHoliDeInfo?yearss='+moment().year())\r\n    .then(Response => {\r\n\r\n     \r\n          if (Response.status === 200) {\r\n            \r\n            setNames(Response.data.response.body.items.item);\r\n            axios.get('/api/getschedule/'+id)\r\n      .then(Response => {\r\n\r\n     \r\n          if (Response.status === 200) {\r\n            setEventss(Response.data);\r\n         }\r\n      });\r\n           // console.log(Response.data.response.body.items.item);\r\n         }\r\n      });\r\n      \r\n      document.body.classList.add(\"calendars\");\r\n      document.body.classList.add(\"sidebar-collapse\");\r\n      document.documentElement.classList.remove(\"nav-open\");\r\n      window.scrollTo(0, 0);\r\n      document.body.scrollTop = 0;\r\n        return function cleanup() {\r\n          document.body.classList.remove(\"calendars\");\r\n          document.body.classList.remove(\"sidebar-collapse\");\r\n          isSubscribed = false\r\n        };\r\n   \r\n\r\n}, []);\r\n  \r\n\r\nconst events= names.map((data)=>{\r\n \r\n  const datess= String(data.locdate).substring(0,4)+\",\"+String(data.locdate).substring(4,6)+\",\"+String(data.locdate).substring(6,8)\r\n\r\n  return {\r\n   // id: training.id,\r\n     \r\n    title: data.dateName,\r\n    start: new Date(datess),\r\n    end: new Date(datess),\r\n    alldat:true\r\n  }\r\n})\r\n const events2= eventss.map((data)=>{\r\n\r\n    return {\r\n    id: data.id,\r\n      title: data.title,\r\n      start:  moment(data.startdate).toDate(),\r\n      end: moment(data.enddate).toDate(),\r\n      alldat:data.alldat\r\n    }\r\n })\r\n\r\nconst handleSlotSelect = slotInfo => {\r\n\r\n   //if (viewss === 'month') { // assumes you got 'view' from state\r\n  //   // ... do some date stuff to get _just the date_ from the slotInfo.start\r\nsetDates(slotInfo.start)\r\n  setViews('day')\r\n  //alert(datedss);\r\n  // }\r\n  // ... any other slot selection functionality for other views\r\n};\r\n//const myEventsList=Anyday; // json으로 작성한거 임시로 넣어서 밑에 있는 이벤트로 들어감\r\n\r\nconst Calendarfinal = () =>{ \r\n  //위에 import로 이미 캘린더는 생성이 되었고 const가 변수선언이랑 비슷한건데 이걸 .. 컴포넌트? 로 해서 밑에 넣음\r\n  //console.log(events)\r\nconst finalevent = Object.assign(events, events2);\r\n\r\n\r\n // setYears()\r\n  return(\r\n  <div>\r\n      <Calendar\r\n      onSelectEvent={event => {if(event.id != null) window.location.href=\"./custom/\"+event.id}} //공휴일이랑 정한 일정 분리(?)\r\n      localizer={localizer} //언어와 시간대\r\n      events={finalevent}   //출퇴근 위에꺼 입력됨\r\n      startAccessor=\"start\" \r\n      endAccessor=\"end\"\r\n      selectable={true}\r\n      onNavigate={datedss}\r\n      date={datedss}\r\n      defaultView={viewss}\r\n      defaultDate={datedss}\r\n      onNavigate={(date) => setDates(date)}\r\n      getDrilldownView={(targetDate, currentViewName, configuredViewNames) =>{\r\n        setViews(currentViewName)\r\n        return null}\r\n      }\r\n      onSelectSlot={handleSlotSelect}\r\n      style={{ height: 690 ,margin: 30, marginBottom: 40}}\r\n    />\r\n    \r\n\r\n  </div>\r\n  )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n    <div>\r\n    <ExamplesNavbar />\r\n    <div className=\"page-header clear-filter\">\r\n        <div\r\n          className=\"page-header-image\"\r\n          style={{\r\n            backgroundImage: \"url(\" + require(\"assets/img/hi.jpg\").default + \")\",\r\n          }}\r\n        ></div>\r\n           <div className=\"content-center\">\r\n          <Container>\r\n            <h1 className=\"title\">Calendar</h1>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n        <Calendarfinal /> {/* 여기에 걍 넣어준거 */}\r\n        <CalendarButton/>\r\n        <DarkFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Calendars ;\r\n//({ forceRefresh: true });"]},"metadata":{},"sourceType":"module"}